#분류 후 평균금액 최대기준으로 랜덤포레스트함


from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score, classification_report

# ID 열을 제거하고, 피처와 타겟 변수를 분리
data = data.drop(columns=['ID'])
X = data.drop(columns=['대분류_수정_평균금액최대'])  # 피처
y = data['대분류_수정_평균금액최대']  # 타겟 변수

# 타겟 변수 인코딩
label_encoder = LabelEncoder()
y_encoded = label_encoder.fit_transform(y)

# 남아 있는 범주형 피처를 인코딩 (더미 변수화)
X_encoded = pd.get_dummies(X, drop_first=True)

# 데이터를 학습용과 테스트용으로 분리
X_train, X_test, y_train, y_test = train_test_split(X_encoded, y_encoded, test_size=0.2, random_state=42)

# RandomForestClassifier 초기화 및 학습
rf_model = RandomForestClassifier(random_state=42)
rf_model.fit(X_train, y_train)

# 테스트 세트에 대한 예측 수행
y_pred = rf_model.predict(X_test)

# 모델 평가
accuracy = accuracy_score(y_test, y_pred)  # 정확도
classification_rep = classification_report(y_test, y_pred, target_names=label_encoder.classes_)  # 분류 보고서
